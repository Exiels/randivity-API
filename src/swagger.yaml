openapi: 3.0.3
info:
  title: Randivity API
  description: |-
    The API for the randivity project.

    Randivity is a project to help you chose an activity randomly from a list for you and/or your friends.
    
    Randivity is available as an API, a Web Application, a Mobile Application and a Discord bot
  license:
    name: Attribution-NonCommercial-ShareAlike 4.0 International
    url: https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Main backend server
tags:
  - name: user
    description: User operations
  - name: admin
    description: Admin operations
  - name: list
    description: List operations
  - name: items
    description: Items operations
  - name: rand
    description: Rand operations
paths:
  /user/login:
    post:
      tags:
        - user
      summary: Login a User
      description: >
        Login a User, given a valid email and a valid password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token'
        '401':
          description: Invalid inputs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidLogin'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalServerError'
  /user/password:
    patch:
      tags:
        - user
      summary: Change the user password
      description: >
        Change the password of the current logged-in user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changePassword'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ok'
        '403':
          description: No token sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessDenied'
        '400':
          description: Token invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidToken'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalServerError'
      security:
        - x-auth-token: []
  /admin/code:
    get:
      tags:
        - admin
      summary: Get list of server code
      description: >
        Get the list of server code
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/code'
        '403':
          description: No token sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessDenied'
        '400':
          description: Token invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidToken'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalServerError'
      security:
        - x-auth-token: []
    post:
      tags:
        - admin
      summary: Generate code
      description: >
        Generate a new server code with or without a note
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/generate'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/code'
        '403':
          description: No token sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessDenied'
        '400':
          description: Token invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidToken'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalServerError'
      security:
        - x-auth-token: []
  /admin/code/check:
    get:
      tags:
        - admin
      summary: Check server code
      description: >
        Check the validity of a server code
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ok'
        '403':
          description: No server-code sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessDenied'
        '400':
          description: Server code invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidCode'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalServerError'
      security:
        - server-code: []
  /list:
    get:
      tags:
        - list
      summary: Get list of lists
      description: >
        Get the list of all server lists
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list'
        '403':
          description: No server-code sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessDenied'
        '400':
          description: Server code invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidCode'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalServerError'
      security:
        - server-code: []
    post:
      tags:
        - list
      summary: Generate list
      description: >
        Generate a new list given it's name
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/listCreate'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listCreated'
        '403':
          description: No server-code sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessDenied'
        '409':
          description: List already exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAlreadyExist'
        '400':
          description: Server code invalid | Invalid body
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/invalidCode'
                  - $ref: '#/components/schemas/invalidBody'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalServerError'
      security:
        - server-code: []
    delete:
      tags:
        - list
      summary: Delete list
      description: >
        Delete a list by it's id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/delete'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listDeleted'
        '404':
          description: List not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listNotFound'
        '400':
          description: Server code invalid
          content:
            application/json:
              schema:
                oneOf:
                 - $ref: '#/components/schemas/invalidCode'
                 - $ref: '#/components/schemas/invalidId'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalServerError'
      security:
        - server-code: []
  /list/items:
    get:
      tags:
        - items
      summary: Get list of items
      description: >
        Get the list of items from a list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/delete'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/item'
        '403':
          description: No server-code sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessDenied'
        '400':
          description: Server code invalid | Missing id | Invalid id
          content:
            application/json:
              schema:
                oneOf:
                 - $ref: '#/components/schemas/invalidId'
                 - $ref: '#/components/schemas/missingId'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalServerError'
      security:
        - server-code: []
    post:
      tags:
        - items
      summary: Generate item
      description: >
        Generate a new item given it's listId, name, author, description, maxParticipants, price and address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/itemGeneration'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/itemCreated'
        '403':
          description: No server-code sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessDenied'
        '409':
          description: Item already exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/itemAlreadyExist'
        '400':
          description: Server code invalid | Invalid body | Invalid listId
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/invalidCode'
                  - $ref: '#/components/schemas/invalidBody'
                  - $ref: '#/components/schemas/invalidId'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalServerError'
      security:
        - server-code: []
    delete:
      tags:
        - items
      summary: Delete item
      description: >
        Delete an item by it's id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/delete'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/itemDeleted'
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listNotFound'
        '400':
          description: Server code invalid | Invalid id
          content:
            application/json:
              schema:
                oneOf:
                 - $ref: '#/components/schemas/invalidCode'
                 - $ref: '#/components/schemas/invalidId'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalServerError'
      security:
        - server-code: []
    patch:
      tags:
        - items
      summary: Patch Item
      description: >
        Patch an item given it's id, listId, name, author, description, maxParticipants, price and address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchItem'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/itemModified'
        '404':
          description: List not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/itemNotFound'
        '400':
          description: Server code invalid | invalid id
          content:
            application/json:
              schema:
                oneOf:
                 - $ref: '#/components/schemas/invalidCode'
                 - $ref: '#/components/schemas/invalidId'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalServerError'
      security:
        - server-code: []
  /list/items/all:
    get:
      tags:
        - items
      summary: Get list of all items
      description: >
        Get the list of all server items
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/item'
        '403':
          description: No server-code sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessDenied'
        '400':
          description: Server code invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidCode'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalServerError'
      security:
        - server-code: []
  /list/rand:
    get:
      tags:
        - rand
      summary: Get random item
      description: >
        Get a random item from a list given it's id
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/item'
        '403':
          description: No server-code sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessDenied'
        '400':
          description: Server code invalid
          content:
            application/json:
              schema:
                oneOf:
                   - $ref: '#/components/schemas/invalidCode'
                   - $ref: '#/components/schemas/invalidId'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internalServerError'
      security:
        - server-code: []
components:
  schemas:
    UserLogin:
      type: object
      properties:
        username:
          type: string
          example: admin
        password:
          type: string
          example: 'admin123'
    changePassword:
      type: object
      properties:
        password:
          type: string
          example: 'admin123'
    generate:
      type: object
      properties:
        note:
          type: string
          example: 'test'
    delete:
      type: object
      properties:
        id:
          type: string
          example: '642cafcadac5c6da6926dbf4'
    listCreate:
      type: object
      properties:
        name:
          type: string
          example: 'test'
    token:
      type: object
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NDJiOTg4NTE0ZDMwNjA5MDYxZGQ3MmIiLCJpYXQiOjE2ODExOTcwMDIsImV4cCI6MTY4MTI4MzQwMn0.IbO1jwqRt4sgNlNWlReZ5aj-D6C5zwSnMlz2eaLsf_s"
    ok:
      type: object
      properties:
        message:
          type: string
          example: "OK"
    listCreated:
      type: object
      properties:
        message:
          type: string
          example: "List created"
    itemCreated:
      type: object
      properties:
        message:
          type: string
          example: "Item created"
    listDeleted:
      type: object
      properties:
        message:
          type: string
          example: "List deleted"
    itemDeleted:
      type: object
      properties:
        message:
          type: string
          example: "Item deleted"
    itemModified:
      type: object
      properties:
        message:
          type: string
          example: "Item modified"
    code:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
            example: "642b9f455f714aca405bba4d"
          code:
            type: string
            example: "Jl01k0Q"
          creationDate:
            type: string
            example: "2023-04-04T03:53:41.969Z"
          note:
            type: string
            example: "test"
          __v:
            type: integer
            example: 0
    list:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
            example: "642b9f455f714aca405bba4d"
          name:
            type: string
            example: "test"
          items:
            type: array
            items:
              type: string
              example: "6430ce523bbefcb10fff44f5"
          __v:
            type: integer
            example: 0
    item:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
            example: "642b9f455f714aca405bba4d"
          name:
            type: string
            example: "item1"
          author:
            type: string
            example: "admin"
          description:
            type: string
            example: "Test item"
          maxParticipants:
            type: integer
            example: 2
          price:
            type: integer
            example: 2
          address:
            type: string
            example: "Test address"
    itemGeneration:
      type: array
      items:
        type: object
        properties:
          listId:
            type: string
            example: "642b9f455f714aca405bba4d"
          name:
            type: string
            example: "item1"
          author:
            type: string
            example: "admin"
          description:
            type: string
            example: "Test item"
          maxParticipants:
            type: integer
            example: 2
          price:
            type: integer
            example: 2
          address:
            type: string
            example: "Test address"
    patchItem:
      type: array
      items:
        type: object
        properties:
          itemId:
            type: string
            example: "642b9f455f714aca405bba4d"
          listId:
            type: string
            example: "642b9f455f714aca405bba4d"
          name:
            type: string
            example: "item1"
          author:
            type: string
            example: "admin"
          description:
            type: string
            example: "Test item"
          maxParticipants:
            type: integer
            example: 2
          price:
            type: integer
            example: 2
          address:
            type: string
            example: "Test address"
    invalidLogin:
      type: object
      properties:
        message:
          type: string
          example: "Invalid username or password"
    invalidId:
      type: object
      properties:
        message:
          type: string
          example: "Invalid id"
    missingId:
      type: object
      properties:
        message:
          type: string
          example: "Missing id"
    listNotFound:
      type: object
      properties:
        message:
          type: string
          example: "List not found"
    itemNotFound:
      type: object
      properties:
        message:
          type: string
          example: "Item not found"
    invalidBody:
      type: object
      properties:
        message:
          type: string
          example: "x is required"
    accessDenied:
      type: object
      properties:
        message:
          type: string
          example: "Access Denied"
    invalidToken:
      type: object
      properties:
        message:
          type: string
          example: "Invalid token"
    invalidCode:
      type: object
      properties:
        message:
          type: string
          example: "Invalid server code"
    listAlreadyExist:
      type: object
      properties:
        message:
          type: string
          example: "List already Exist"
    itemAlreadyExist:
      type: object
      properties:
        message:
          type: string
          example: "Item already Exist"
    internalServerError:
      type: object
      properties:
        message:
          type: string
          example: "Internal Server Error"
  securitySchemes:
      x-auth-token:
        type: apiKey
        name: x-auth-token
        in: header
      server-code:
        type: apiKey
        name: server-code
        in: header